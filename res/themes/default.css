/* The default stylesheet. Always embedded into binaries and applied before any other CSS. */

:root {
  color: #222;
  font-family: sans-serif;
  font-size: 1rem;
  line-height: 1.2rem;
}

Spacer {
  flex: 1;
  justify-self: stretch;
}

ButtonLike,
CheckBox,
RadioButton,
ComboBoxBase {
  display: flex;
  cursor: pointer;
}

Link {
  place-self: start;
  cursor: pointer;
}

Paragraph {
  white-space: pre-wrap;
}

EditorSearchPane {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas: "fe fb c" "re rb .";
}
EditorSearchPane > .find {
  grid-area: fe;
}
EditorSearchPane > .find-buttons {
  display: flex;
  grid-area: fb;
}
EditorSearchPane > .replace {
  grid-area: re;
}
EditorSearchPane > .replace-buttons {
  display: flex;
  grid-area: rb;
}
EditorSearchPane > .close {
  grid-area: c;
}

GroupBox {
  display: flex;
  flex-direction: column;
}

TabItem,
TabBar {
  display: flex;
}

TabWidget {
  display: column;
}

ListView > .item,
TreeItemWidget,
TreeItemWidget > Panel {
  display: flex;
}

TreeWidget {
  display: flex;
  flex-direction: column;
  gap: 0;
}

ToolBar,
ToolBarHost,
StatusLine,
StatusLineTextPanel,
StatusLineIconPanel {
  display: flex;
}

AppFrame,
WindowFrame {
  display: column;
}

WindowFrame > .caption,
WindowFrame > .body {
  display: flex;
}

Dialog {
  display: flex;
  flex-direction: column;
}

Dialog > .buttons {
  display: flex;
}

FileDialog .content {
  display: flex;
  justify-self: stretch;
}

FileDialog .right-panel {
  display: flex;
  flex-direction: column;
}

FilePathPanelItem,
FileNameEditLine {
  display: flex;
}

SettingsDialog > .content {
  display: flex;
  justify-self: stretch;
}
SettingsDialog .settings-table {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-content: start;
}
SettingsDialog .settings-table > .full-row,
SettingsDialog .settings-table > .title {
  grid-column-end: span 2;
}



CssHotReloadWidget {
  display: flex;
  flex-direction: column;
  width: 200px;
  padding: 18px;
}
CssHotReloadWidget > * {
  text-align: center;
}
CssHotReloadWidget > Label[state="watching"] {
  color: green;
}
CssHotReloadWidget > Label[state="error"] {
  color: red;
}
